[{"C:\\Users\\Lenovo\\Documents\\GitHub\\meme-searcher\\meme-searcher\\src\\index.js":"1","C:\\Users\\Lenovo\\Documents\\GitHub\\meme-searcher\\meme-searcher\\src\\App.js":"2","C:\\Users\\Lenovo\\Documents\\GitHub\\meme-searcher\\meme-searcher\\src\\reportWebVitals.js":"3","C:\\Users\\Lenovo\\Documents\\GitHub\\meme-searcher\\meme-searcher\\src\\containers\\resultContainer.js":"4","C:\\Users\\Lenovo\\Documents\\GitHub\\meme-searcher\\meme-searcher\\src\\containers\\searchContainer.js":"5","C:\\Users\\Lenovo\\Documents\\GitHub\\meme-searcher\\meme-searcher\\src\\containers\\SearchContainer.js":"6","C:\\Users\\Lenovo\\Documents\\GitHub\\meme-searcher\\meme-searcher\\src\\containers\\ResultContainer.js":"7","C:\\Users\\Lenovo\\Documents\\GitHub\\meme-searcher\\meme-searcher\\src\\components\\MemeCard.js":"8","C:\\Users\\Lenovo\\Documents\\GitHub\\meme-searcher\\meme-searcher\\src\\containers\\memeGenerator.js":"9","C:\\Users\\Lenovo\\Documents\\GitHub\\meme-searcher\\meme-searcher\\src\\components\\Dialog.js":"10","C:\\Users\\Lenovo\\Documents\\GitHub\\meme-searcher\\meme-searcher\\src\\containers\\currentImage.js":"11","C:\\Users\\Lenovo\\Documents\\GitHub\\meme-searcher\\meme-searcher\\src\\containers\\TextField.js":"12","C:\\Users\\Lenovo\\Documents\\GitHub\\meme-searcher\\meme-searcher\\src\\containers\\MemeLibrary.js":"13","C:\\Users\\Lenovo\\Documents\\GitHub\\meme-searcher\\meme-searcher\\src\\containers\\CurrentImage.js":"14","C:\\Users\\Lenovo\\Documents\\GitHub\\meme-searcher\\meme-searcher\\src\\containers\\MemeGenerator.js":"15","C:\\Users\\Lenovo\\Documents\\GitHub\\meme-searcher\\meme-searcher\\src\\containers\\Footer.js":"16"},{"size":503,"mtime":1612535817845,"results":"17","hashOfConfig":"18"},{"size":1478,"mtime":1612538223060,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":190,"mtime":1612268072932,"results":"21","hashOfConfig":"18"},{"size":344,"mtime":1612275597211,"results":"22","hashOfConfig":"18"},{"size":485,"mtime":1612444920936,"results":"23","hashOfConfig":"18"},{"size":355,"mtime":1612529981846,"results":"24","hashOfConfig":"18"},{"size":4903,"mtime":1612529394042,"results":"25","hashOfConfig":"18"},{"size":5283,"mtime":1612535153367,"results":"26","hashOfConfig":"18"},{"size":1543,"mtime":1612527168087,"results":"27","hashOfConfig":"18"},{"size":876,"mtime":1612537449176,"results":"28","hashOfConfig":"18"},{"size":636,"mtime":1612532013909,"results":"29","hashOfConfig":"18"},{"size":495,"mtime":1612531202919,"results":"30","hashOfConfig":"18"},{"size":876,"mtime":1612537449176,"results":"31","hashOfConfig":"18"},{"size":5283,"mtime":1612535153367,"results":"32","hashOfConfig":"18"},{"size":274,"mtime":1612537917391,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3ny0a7",{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Lenovo\\Documents\\GitHub\\meme-searcher\\meme-searcher\\src\\index.js",[],"C:\\Users\\Lenovo\\Documents\\GitHub\\meme-searcher\\meme-searcher\\src\\App.js",["74","75"],"C:\\Users\\Lenovo\\Documents\\GitHub\\meme-searcher\\meme-searcher\\src\\reportWebVitals.js",[],["76","77"],"C:\\Users\\Lenovo\\Documents\\GitHub\\meme-searcher\\meme-searcher\\src\\containers\\resultContainer.js",[],["78","79"],"C:\\Users\\Lenovo\\Documents\\GitHub\\meme-searcher\\meme-searcher\\src\\containers\\searchContainer.js",[],"C:\\Users\\Lenovo\\Documents\\GitHub\\meme-searcher\\meme-searcher\\src\\containers\\SearchContainer.js",["80"],"import React,{useState} from 'react'\r\nimport '../style.css';\r\nimport { Input } from '@material-ui/core';\r\nexport default function SearchContainer(props)\r\n{\r\n\r\nreturn (\r\n<div>\r\n<form className=\"form\">\r\n<label className=\"label\">\r\n  {\" \"}\r\n    ðŸ“·\r\n  {\"  \"}\r\n</label>\r\n<Input  onChange={(e)=>props.onSearch(e)} type=\"text\" name=\"query\" className=\"input\" value={props.search} placeholder=\"search a meme template..\"/>\r\n\r\n<h1><strong>{props.search}</strong></h1>\r\n</form>\r\n\r\n</div>);\r\n\r\n}\r\n","C:\\Users\\Lenovo\\Documents\\GitHub\\meme-searcher\\meme-searcher\\src\\containers\\ResultContainer.js",["81","82"],"import React from 'react';\r\nimport '../style.css';\r\nimport CurrentImage from './CurrentImage';\r\nimport MemeGenerator from './MemeGenerator';\r\nimport MemeCard from '../components/MemeCard';\r\nexport default function ResultContainer(props)\r\n{\r\nreturn(\r\n<div>\r\n<h1>{\"hiiii\"}</h1>\r\n<div>\r\n<MemeGenerator allImages={props.memesArray}/>\r\n</div> \r\n</div>\r\n);\r\n}\r\n","C:\\Users\\Lenovo\\Documents\\GitHub\\meme-searcher\\meme-searcher\\src\\components\\MemeCard.js",["83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105"],"import React,{useState} from 'react';\r\nimport ResultContainer from '../containers/ResultContainer';\r\nimport memeGenerator from '../containers/memeGenerator';\r\nimport FormDialog from './Dialog';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { CardHeader,Button,TextField,Dialog,DialogActions,DialogContent,DialogContentText,DialogTitle } from '@material-ui/core';\r\nimport { BrowserRouter,Route,Redirect,Switch,Link} from 'react-router-dom';\r\n\r\nimport '../style.css';\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth:200,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  }\r\n  \r\n});\r\n\r\nexport default function MemeCard(props) {\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>â€¢</span>;\r\n  const [textadded,setText]=useState(\"\");\r\n  const [x,setX]=useState(0);\r\n  const [y,setY]=useState(0);\r\n  const [allEdits,setEdits]=useState([]);\r\n\r\n\r\nconst calculateAspectRatio = function(image) {\r\n    let canvas = document.getElementById(\"imageCanvas\");\r\n  \r\n    let imageAspectRatio = image.width / image.height;\r\n    let canvasAspectRatio = canvas.width / canvas.height;\r\n    let renderableHeight, renderableWidth, xStart, yStart;\r\n    let AspectRatio = {};\r\n  \r\n    // If image's aspect ratio is less than canvas's we fit on height\r\n    // and place the image centrally along width\r\n    if (imageAspectRatio < canvasAspectRatio) {\r\n      renderableHeight = canvas.height;\r\n      renderableWidth = image.width * (renderableHeight / image.height);\r\n      xStart = (canvas.width - renderableWidth) / 2;\r\n      yStart = 0;\r\n    }\r\n  \r\n    // If image's aspect ratio is greater than canvas's we fit on width\r\n    // and place the image centrally along height\r\n    else if (imageAspectRatio > canvasAspectRatio) {\r\n      renderableWidth = canvas.width;\r\n      renderableHeight = image.height * (renderableWidth / image.width);\r\n      xStart = 0;\r\n      yStart = (canvas.width - renderableHeight) / 2;\r\n    }\r\n  \r\n    //keep aspect ratio\r\n    else {\r\n      renderableHeight = canvas.height;\r\n      renderableWidth = canvas.width;\r\n      xStart = 0;\r\n      yStart = 0;\r\n    }\r\n    AspectRatio.renderableHeight = renderableHeight;\r\n    AspectRatio.renderableWidth = renderableWidth;\r\n    AspectRatio.startX = xStart;\r\n    AspectRatio.startY = yStart;\r\n    return AspectRatio;\r\n  };\r\n  \r\n   const loadImageInCanvas = event => {\r\n    const canvas = document.getElementById(\"imageCanvas\");\r\n    const ctx = canvas.getContext(\"2d\");\r\n    const img = new Image();\r\n    img.src = event.target.src;\r\n    img.crossOrigin = \"Anonymous\";\r\n    img.addEventListener(\"load\", () => {\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n  \r\n      // from studyJS\r\n      let AR = calculateAspectRatio(img);\r\n      ctx.drawImage(\r\n        img,\r\n        AR.startX,\r\n        AR.startY,\r\n        AR.renderableWidth,\r\n        AR.renderableHeight\r\n      );\r\n    });\r\n  };\r\n  \r\n  const handleImgClick = e => {\r\n    loadImageInCanvas(e);\r\n  };\r\n  function getMousePos(canvas, e) {\r\n    const rect = canvas.getBoundingClientRect();\r\n    return {\r\n      x: e.clientX - rect.left,\r\n      y: e.clientY - rect.top\r\n    };\r\n  }\r\n  function handleTextChange(e)\r\n  {\r\n    setText(e.target.value);   \r\n  }\r\n  function handleText(e) {\r\n    const canv = e.target;\r\n    const ctx = canv.getContext(\"2d\");\r\n    const pos = getMousePos(canv, e);\r\n    ctx.font = \"800 40px Impact, Arial\";\r\n    ctx.fillStyle = \"black\";\r\n    ctx.fillText(textadded, pos.x, pos.y);\r\n    setEdits(prevEdits => {\r\n        return [...prevEdits, {\r\n            posX: pos.x,\r\n            posY: pos.y,\r\n            text: textadded}];\r\n      });\r\n      return allEdits;\r\n  }\r\n  let addTextToCanvas = e => {\r\n    e.preventDefault();\r\n    handleText(e);\r\n    setText(\"\");\r\n  };\r\n  let removeLastText = e => {\r\n    e.preventDefault();\r\n    const canv = document.getElementById(\"imageCanvas\");\r\n    const ctx = canv.getContext(\"2d\");\r\n    setEdits(allEdits.pop());\r\n    loadImageInCanvas(false);\r\n\r\n    setTimeout(() => {\r\n      ctx.font = \"800 40px Impact, Arial\";\r\n      ctx.fillStyle = \"#433487\";\r\n      allEdits.forEach(edit => {\r\n        ctx.fillText(edit.text, edit.posX, edit.posY);\r\n      });\r\n    }, 200);\r\n  };\r\n  \r\n  return (\r\n      \r\n    <Card className={classes.root} variant=\"outlined\">\r\n    <CardHeader title={props.memeObject.name}/>\r\n      <CardContent>\r\n        <img id=\"image\"  onClick={(e)=>handleImgClick(e)} alt=\"meme\" src={props.memeObject.url} height={350} width={350}></img> \r\n        <h2>{textadded}</h2>\r\n      </CardContent>\r\n      <CardActions>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","C:\\Users\\Lenovo\\Documents\\GitHub\\meme-searcher\\meme-searcher\\src\\containers\\memeGenerator.js",["106","107","108","109","110","111","112","113"],"C:\\Users\\Lenovo\\Documents\\GitHub\\meme-searcher\\meme-searcher\\src\\components\\Dialog.js",[],"C:\\Users\\Lenovo\\Documents\\GitHub\\meme-searcher\\meme-searcher\\src\\containers\\currentImage.js",[],"C:\\Users\\Lenovo\\Documents\\GitHub\\meme-searcher\\meme-searcher\\src\\containers\\TextField.js",["114","115","116","117","118","119","120"],"import React from \"react\";\r\nimport { CardHeader,Button,Dialog,DialogActions,DialogContent,DialogContentText,DialogTitle } from '@material-ui/core';\r\nimport FormDialog from '../components/Dialog';\r\nfunction TextField(props) {\r\n  const { userText, handleTextChange, removeLastText ,onSaveMeme} = props;\r\n  return (\r\n    <form className=\"text-form\">\r\n    <FormDialog\r\n            \r\n            userText={userText}\r\n            handleTextChange={handleTextChange}/>\r\n       <br/>\r\n      <Button onClick={removeLastText} variant=\"contained\" color=\"primary\">Remove last text</Button>\r\n      \r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TextField;","C:\\Users\\Lenovo\\Documents\\GitHub\\meme-searcher\\meme-searcher\\src\\containers\\MemeLibrary.js",[],"C:\\Users\\Lenovo\\Documents\\GitHub\\meme-searcher\\meme-searcher\\src\\containers\\CurrentImage.js",["121","122","123","124","125","126","127","128","129","130"],"import React from \"react\";\r\nimport { CardHeader,Button,Dialog,DialogActions,DialogContent,DialogContentText,DialogTitle } from '@material-ui/core';\r\nfunction CurrentImage({ currentImage, addTextToCanvas,onSaveMeme}) {\r\n  const { src, alt } = currentImage;\r\n  \r\n let extra=\"https://i.imgflip.com/1ur9b0.jpg\";\r\n  return (\r\n    <div className=\"current-image\" id=\"current-image\">\r\n      {!src ? (\r\n          <div>\r\n        <h3>Choose an image from Meme Library and then click edit option. </h3>\r\n        <h4>Right click and save image</h4>\r\n        </div>\r\n      ) : (\r\n        <h1></h1>\r\n      )}\r\n      <div className=\"img-canvas\">\r\n        <canvas \r\n          id=\"imageCanvas\"\r\n          width={14 * 30}\r\n          height={14 * 30}\r\n          onClick={addTextToCanvas}\r\n          \r\n        />\r\n      \r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CurrentImage;\r\n","C:\\Users\\Lenovo\\Documents\\GitHub\\meme-searcher\\meme-searcher\\src\\containers\\MemeGenerator.js",["131","132","133","134","135","136","137","138"],"import React, { Component,useState} from \"react\";\r\nimport CurrentImage from './CurrentImage';\r\nimport TextField from './TextField';\r\nimport MemeLibrary from './MemeLibrary';\r\n\r\n\r\nexport default function MemeGenerator(props) {\r\n\r\n    const [currentImage,setCurrImg]=useState(\"https://i.imgflip.com/1ur9b0.jpg\");\r\n    const [textadded,setText]=useState(\"\");\r\n    const [x,setX]=useState(0);\r\n    const [y,setY]=useState(0);\r\n    const [allEdits,setEdits]=useState([]);\r\n\r\n   let onSaveMeme = e => {\r\n        e.preventDefault();\r\n        const canv = document.getElementById(\"imageCanvas\");\r\n        // Canvas2Image.saveAsPNG(canv);\r\n        var image = canv\r\n          .toDataURL(\"image/png\")\r\n          .replace(\"image/png\", \"image/octet-stream\");\r\n        window.location.href = image;\r\n      };\r\n  \r\n  const calculateAspectRatio = function(image) {\r\n      let canvas = document.getElementById(\"imageCanvas\");\r\n    \r\n      let imageAspectRatio = image.width / image.height;\r\n      let canvasAspectRatio = canvas.width / canvas.height;\r\n      let renderableHeight, renderableWidth, xStart, yStart;\r\n      let AspectRatio = {};\r\n    \r\n      // If image's aspect ratio is less than canvas's we fit on height\r\n      // and place the image centrally along width\r\n      if (imageAspectRatio < canvasAspectRatio) {\r\n        renderableHeight = canvas.height;\r\n        renderableWidth = image.width * (renderableHeight / image.height);\r\n        xStart = (canvas.width - renderableWidth) / 2;\r\n        yStart = 0;\r\n      }\r\n    \r\n      // If image's aspect ratio is greater than canvas's we fit on width\r\n      // and place the image centrally along height\r\n      else if (imageAspectRatio > canvasAspectRatio) {\r\n        renderableWidth = canvas.width;\r\n        renderableHeight = image.height * (renderableWidth / image.width);\r\n        xStart = 0;\r\n        yStart = (canvas.width - renderableHeight) / 2;\r\n      }\r\n    \r\n      //keep aspect ratio\r\n      else {\r\n        renderableHeight = canvas.height;\r\n        renderableWidth = canvas.width;\r\n        xStart = 0;\r\n        yStart = 0;\r\n      }\r\n      AspectRatio.renderableHeight = renderableHeight;\r\n      AspectRatio.renderableWidth = renderableWidth;\r\n      AspectRatio.startX = xStart;\r\n      AspectRatio.startY = yStart;\r\n      return AspectRatio;\r\n    };\r\n    \r\n     const loadImageInCanvas = event => {\r\n      const canvas = document.getElementById(\"imageCanvas\");\r\n      const ctx = canvas.getContext(\"2d\");\r\n      const img = new Image();\r\n     // const img=\"https://i.imgflip.com/1ur9b0.jpg\"\r\n      img.src = event ? event.target.src :\"https://i.imgflip.com/1ur9b0.jpg\";\r\n      img.crossOrigin = \"Anonymous\";\r\n      img.addEventListener(\"load\", () => {\r\n        //ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    \r\n        // from studyJS\r\n        let AR = calculateAspectRatio(img);\r\n        ctx.drawImage(\r\n          img,\r\n          AR.startX,\r\n          AR.startY,\r\n          AR.renderableWidth,\r\n          AR.renderableHeight\r\n        );\r\n      });\r\n    };\r\n    \r\n    const handleImgClick = e => {\r\n     setCurrImg= e.target;\r\n      loadImageInCanvas(e);\r\n    };\r\n\r\n    function getMousePos(canvas, e) {\r\n      const rect = canvas.getBoundingClientRect();\r\n      return {\r\n        x: e.clientX - rect.left,\r\n        y: e.clientY - rect.top\r\n      };\r\n    }\r\n\r\n    function handleTextChange(e)\r\n    {\r\n      setText(e.target.value);   \r\n    }\r\n    let val2=\"\";\r\n    if(props.memesArray.length!=0)\r\n    {\r\n        val2=\"Available meme templates\";\r\n    }\r\n    function handleText(e) {\r\n      const canv = e.target;\r\n      const ctx = canv.getContext(\"2d\");\r\n      const pos = getMousePos(canv, e);\r\n      ctx.font = \"800 40px Impact, Arial\";\r\n      ctx.fillStyle = \"black\";\r\n      ctx.fillText(textadded, pos.x, pos.y);\r\n      setEdits(prevEdits => {\r\n          return [...prevEdits, {\r\n              posX: pos.x,\r\n              posY: pos.y,\r\n              text: textadded}];\r\n        });\r\n        return allEdits;\r\n    }\r\n    let addTextToCanvas = e => {\r\n      e.preventDefault();\r\n      handleText(e);\r\n      setText(\"\");\r\n    };\r\n    let removeLastText = e => {\r\n      e.preventDefault();\r\n      const canv = document.getElementById(\"imageCanvas\");\r\n      const ctx = canv.getContext(\"2d\");\r\n      setEdits(allEdits.pop());\r\n      loadImageInCanvas(false);\r\n  \r\n      setTimeout(() => {\r\n        ctx.font = \"800 40px Impact, Arial\";\r\n        ctx.fillStyle = \"#433487\";\r\n        allEdits.forEach(edit => {\r\n          ctx.fillText(edit.text, edit.posX, edit.posY);\r\n        });\r\n      }, 200);\r\n    }\r\n    return(\r\n        <div>\r\n        <TextField\r\n                    removeLastText={removeLastText}\r\n                    userText={textadded}\r\n                    handleTextChange={handleTextChange}\r\n                    />\r\n                \r\n                  <CurrentImage\r\n                    currentImage={currentImage}\r\n                    addTextToCanvas={addTextToCanvas}\r\n                    onSaveMeme={onSaveMeme}\r\n                  />\r\n                <hr />\r\n                <h1>{val2}</h1>\r\n                <br></br>\r\n                <MemeLibrary\r\n                  allImages={props.memesArray}\r\n                  handleImgClick={handleImgClick}\r\n                />\r\n        \r\n        </div> \r\n    )};\r\n\r\n","C:\\Users\\Lenovo\\Documents\\GitHub\\meme-searcher\\meme-searcher\\src\\containers\\Footer.js",[],{"ruleId":"139","severity":1,"message":"140","line":4,"column":25,"nodeType":"141","messageId":"142","endLine":4,"endColumn":35},{"ruleId":"139","severity":1,"message":"143","line":34,"column":1,"nodeType":"141","messageId":"142","endLine":34,"endColumn":5},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"144","replacedBy":"148"},{"ruleId":"146","replacedBy":"149"},{"ruleId":"139","severity":1,"message":"150","line":1,"column":15,"nodeType":"141","messageId":"142","endLine":1,"endColumn":23},{"ruleId":"139","severity":1,"message":"151","line":3,"column":8,"nodeType":"141","messageId":"142","endLine":3,"endColumn":20},{"ruleId":"139","severity":1,"message":"152","line":5,"column":8,"nodeType":"141","messageId":"142","endLine":5,"endColumn":16},{"ruleId":"139","severity":1,"message":"153","line":2,"column":8,"nodeType":"141","messageId":"142","endLine":2,"endColumn":23},{"ruleId":"139","severity":1,"message":"154","line":3,"column":8,"nodeType":"141","messageId":"142","endLine":3,"endColumn":21},{"ruleId":"139","severity":1,"message":"155","line":4,"column":8,"nodeType":"141","messageId":"142","endLine":4,"endColumn":18},{"ruleId":"139","severity":1,"message":"156","line":9,"column":21,"nodeType":"141","messageId":"142","endLine":9,"endColumn":27},{"ruleId":"139","severity":1,"message":"157","line":9,"column":28,"nodeType":"141","messageId":"142","endLine":9,"endColumn":37},{"ruleId":"139","severity":1,"message":"158","line":9,"column":38,"nodeType":"141","messageId":"142","endLine":9,"endColumn":44},{"ruleId":"139","severity":1,"message":"159","line":9,"column":45,"nodeType":"141","messageId":"142","endLine":9,"endColumn":58},{"ruleId":"139","severity":1,"message":"160","line":9,"column":59,"nodeType":"141","messageId":"142","endLine":9,"endColumn":72},{"ruleId":"139","severity":1,"message":"161","line":9,"column":73,"nodeType":"141","messageId":"142","endLine":9,"endColumn":90},{"ruleId":"139","severity":1,"message":"162","line":9,"column":91,"nodeType":"141","messageId":"142","endLine":9,"endColumn":102},{"ruleId":"139","severity":1,"message":"163","line":10,"column":10,"nodeType":"141","messageId":"142","endLine":10,"endColumn":23},{"ruleId":"139","severity":1,"message":"164","line":10,"column":24,"nodeType":"141","messageId":"142","endLine":10,"endColumn":29},{"ruleId":"139","severity":1,"message":"165","line":10,"column":30,"nodeType":"141","messageId":"142","endLine":10,"endColumn":38},{"ruleId":"139","severity":1,"message":"166","line":10,"column":39,"nodeType":"141","messageId":"142","endLine":10,"endColumn":45},{"ruleId":"139","severity":1,"message":"167","line":10,"column":46,"nodeType":"141","messageId":"142","endLine":10,"endColumn":50},{"ruleId":"139","severity":1,"message":"168","line":36,"column":9,"nodeType":"141","messageId":"142","endLine":36,"endColumn":13},{"ruleId":"139","severity":1,"message":"169","line":38,"column":10,"nodeType":"141","messageId":"142","endLine":38,"endColumn":11},{"ruleId":"139","severity":1,"message":"170","line":38,"column":12,"nodeType":"141","messageId":"142","endLine":38,"endColumn":16},{"ruleId":"139","severity":1,"message":"171","line":39,"column":10,"nodeType":"141","messageId":"142","endLine":39,"endColumn":11},{"ruleId":"139","severity":1,"message":"172","line":39,"column":12,"nodeType":"141","messageId":"142","endLine":39,"endColumn":16},{"ruleId":"139","severity":1,"message":"173","line":114,"column":12,"nodeType":"141","messageId":"142","endLine":114,"endColumn":28},{"ruleId":"139","severity":1,"message":"174","line":133,"column":7,"nodeType":"141","messageId":"142","endLine":133,"endColumn":22},{"ruleId":"139","severity":1,"message":"175","line":138,"column":7,"nodeType":"141","messageId":"142","endLine":138,"endColumn":21},{"ruleId":"139","severity":1,"message":"176","line":1,"column":17,"nodeType":"141","messageId":"142","endLine":1,"endColumn":26},{"ruleId":"139","severity":1,"message":"177","line":2,"column":8,"nodeType":"141","messageId":"142","endLine":2,"endColumn":20},{"ruleId":"139","severity":1,"message":"169","line":10,"column":12,"nodeType":"141","messageId":"142","endLine":10,"endColumn":13},{"ruleId":"139","severity":1,"message":"170","line":10,"column":14,"nodeType":"141","messageId":"142","endLine":10,"endColumn":18},{"ruleId":"139","severity":1,"message":"171","line":11,"column":12,"nodeType":"141","messageId":"142","endLine":11,"endColumn":13},{"ruleId":"139","severity":1,"message":"172","line":11,"column":14,"nodeType":"141","messageId":"142","endLine":11,"endColumn":18},{"ruleId":"178","severity":1,"message":"179","line":88,"column":6,"nodeType":"141","messageId":"180","endLine":88,"endColumn":16},{"ruleId":"139","severity":1,"message":"181","line":88,"column":6,"nodeType":"141","messageId":"142","endLine":88,"endColumn":16},{"ruleId":"139","severity":1,"message":"182","line":2,"column":10,"nodeType":"141","messageId":"142","endLine":2,"endColumn":20},{"ruleId":"139","severity":1,"message":"158","line":2,"column":28,"nodeType":"141","messageId":"142","endLine":2,"endColumn":34},{"ruleId":"139","severity":1,"message":"159","line":2,"column":35,"nodeType":"141","messageId":"142","endLine":2,"endColumn":48},{"ruleId":"139","severity":1,"message":"160","line":2,"column":49,"nodeType":"141","messageId":"142","endLine":2,"endColumn":62},{"ruleId":"139","severity":1,"message":"161","line":2,"column":63,"nodeType":"141","messageId":"142","endLine":2,"endColumn":80},{"ruleId":"139","severity":1,"message":"162","line":2,"column":81,"nodeType":"141","messageId":"142","endLine":2,"endColumn":92},{"ruleId":"139","severity":1,"message":"183","line":5,"column":55,"nodeType":"141","messageId":"142","endLine":5,"endColumn":65},{"ruleId":"139","severity":1,"message":"182","line":2,"column":10,"nodeType":"141","messageId":"142","endLine":2,"endColumn":20},{"ruleId":"139","severity":1,"message":"156","line":2,"column":21,"nodeType":"141","messageId":"142","endLine":2,"endColumn":27},{"ruleId":"139","severity":1,"message":"158","line":2,"column":28,"nodeType":"141","messageId":"142","endLine":2,"endColumn":34},{"ruleId":"139","severity":1,"message":"159","line":2,"column":35,"nodeType":"141","messageId":"142","endLine":2,"endColumn":48},{"ruleId":"139","severity":1,"message":"160","line":2,"column":49,"nodeType":"141","messageId":"142","endLine":2,"endColumn":62},{"ruleId":"139","severity":1,"message":"161","line":2,"column":63,"nodeType":"141","messageId":"142","endLine":2,"endColumn":80},{"ruleId":"139","severity":1,"message":"162","line":2,"column":81,"nodeType":"141","messageId":"142","endLine":2,"endColumn":92},{"ruleId":"139","severity":1,"message":"184","line":4,"column":16,"nodeType":"141","messageId":"142","endLine":4,"endColumn":19},{"ruleId":"139","severity":1,"message":"185","line":6,"column":6,"nodeType":"141","messageId":"142","endLine":6,"endColumn":11},{"ruleId":"186","severity":1,"message":"187","line":15,"column":9,"nodeType":"188","endLine":15,"endColumn":13},{"ruleId":"139","severity":1,"message":"176","line":1,"column":17,"nodeType":"141","messageId":"142","endLine":1,"endColumn":26},{"ruleId":"139","severity":1,"message":"169","line":11,"column":12,"nodeType":"141","messageId":"142","endLine":11,"endColumn":13},{"ruleId":"139","severity":1,"message":"170","line":11,"column":14,"nodeType":"141","messageId":"142","endLine":11,"endColumn":18},{"ruleId":"139","severity":1,"message":"171","line":12,"column":12,"nodeType":"141","messageId":"142","endLine":12,"endColumn":13},{"ruleId":"139","severity":1,"message":"172","line":12,"column":14,"nodeType":"141","messageId":"142","endLine":12,"endColumn":18},{"ruleId":"178","severity":1,"message":"179","line":88,"column":6,"nodeType":"141","messageId":"180","endLine":88,"endColumn":16},{"ruleId":"139","severity":1,"message":"181","line":88,"column":6,"nodeType":"141","messageId":"142","endLine":88,"endColumn":16},{"ruleId":"189","severity":1,"message":"190","line":105,"column":31,"nodeType":"191","messageId":"192","endLine":105,"endColumn":33},"no-unused-vars","'IconButton' is defined but never used.","Identifier","unusedVar","'val3' is assigned a value but never used.","no-native-reassign",["193"],"no-negated-in-lhs",["194"],["193"],["194"],"'useState' is defined but never used.","'CurrentImage' is defined but never used.","'MemeCard' is defined but never used.","'ResultContainer' is defined but never used.","'memeGenerator' is defined but never used.","'FormDialog' is defined but never used.","'Button' is defined but never used.","'TextField' is defined but never used.","'Dialog' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'DialogTitle' is defined but never used.","'BrowserRouter' is defined but never used.","'Route' is defined but never used.","'Redirect' is defined but never used.","'Switch' is defined but never used.","'Link' is defined but never used.","'bull' is assigned a value but never used.","'x' is assigned a value but never used.","'setX' is assigned a value but never used.","'y' is assigned a value but never used.","'setY' is assigned a value but never used.","'handleTextChange' is defined but never used.","'addTextToCanvas' is assigned a value but never used.","'removeLastText' is assigned a value but never used.","'Component' is defined but never used.","'currentImage' is defined but never used.","no-const-assign","'setCurrImg' is constant.","const","'setCurrImg' is assigned a value but never used.","'CardHeader' is defined but never used.","'onSaveMeme' is assigned a value but never used.","'alt' is assigned a value but never used.","'extra' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]